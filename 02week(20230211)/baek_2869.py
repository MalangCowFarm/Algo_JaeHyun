import math

go, back, goal = map(int, input().split()) 

print(math.ceil((goal-go)/(go-back)+1))
# 이 식은 ceil을 이용한 식입니다. 이걸 보기전 아래 글을 먼저 읽어보세요.
# 5 1 6 을 예로 들면 6-5 = 1, 1을 (5-1) 로 나누게 되면 0.25가 나오게 됩니다.
# 그렇다면 하루가 걸리지만 0.25 라는 애매한 수가 나오게되니 ceil함수를 통해
# 올림을 해줍시다. 거기에 오르기만 하는 마지막 하루 1을 추가하게 되면
# 아주 간단한 식이 나옵니다.

# 전진 먼저 그리고 후진. 둘은 하루에 한번씩 나타납니다.
# 즉, 오전에 전진을 통해 목표에 달성 했다면 후진 단계를 진행하지 않습니다.

# 2(전진) 1(후진) 5(목표거리)
# 3m 까지는 (2-1) 만큼 가게 됩니다. (3일)
# 3m 에서는 2m 만 올라가면 목표달성이기 때문에 (1일)
# 총 4일이 소모됩니다.

# 5(전진) 1(후진) 6(목표)
# 5m 일 경우도 동일합니다.
# 마지막 날은 5m를 올라가고 끝내면 됩니다.
# 1. 그럼 생각해볼까요? 목표거리 6m 에서 5m 를 제외한 나머지 1m 만 가면 됩니다.
# 그럼 하루에 얼마를 갈까요? (5-1)m 즉 4m 를 갑니다.
# 즉 하루를 소모하고 다음 날 목표를 달성합니다.

# day = 0
# move = 0
# before_goal = goal-go # 1번 과정이 되겠죠
# while True: # 밑의 if 조건이 만족할때 까지 돌려줍니다.
#     day += 1
#     move = day * (go - back)
#     if before_goal <= move:
#         break

# print(day + 1) #while을 돌고 나온 day에 하루를 추가하면 됩니다.
# 물론 답은 나오지만 수가 커지면 연산이 엄청 오래 걸립니다.
